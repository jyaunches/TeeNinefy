TeeNinefy

This project is a stab at getting more familair with the Go Programming Language. It's a simple program that is run from the command line. The idea is as follows.

PROBLEM OVERVIEW

In the early days of text messaging, we did not have screens that showed us keyboards to type into. We had to make due with a keyboard displaying the numbers 0-9. Our prehistoric phones would then attempt to tranlate our number input into words and give us 1 or more suggestions for each number combination we entered.

  1    2    3
      abc  def
  4    5    6
 ghi  jkl  mno
  7    8    9
 pqrs tuv  wxyz
 	   0

To type dog, you would enter 364. To type home, you would enter 4663. 	   

This program will take an input of numbers and make word suggestions (based on it's limited dictionary, more in this below)

NOTE: 1s represent punctuation input and 0s represent spaces. For simplicity sake, in this program they will be ignored.

HOW YOU RUN IT

A built binary is included in this repository. Run this from the command line. The program will prompt you for input as you go

	Example Interaction:

	-------------------------------------------------------------
	Welcome to the amazing T9 simulator program.
	Enter any series of numbers and I will find you word matches.
	Enter 'Done' when you are finished!

	Enter your numbers:439
	Results: gey

	Enter your numbers:37673
	Results: erose

	Enter your numbers:done
	Thanks! Goodbye.


Unit tests can be run with:

> go test

APPROACH

My approach in solving this was to break the problem into 4 parts.

File reading 
	Importing the dictionary content from text files
Word parsing 
	Convert a word into it's appropriate series of numbers, this is then stored as a map of number to word
I/O 
	Retrieve input from user and print results
Dictionary lookup
	The user's input, if results are present, should be a key value for the dictionary. The values that key maps to are the words displayed to the user.)

Things are hooked together in main. This is also where the command line arguments are read.

THE DICTIONARY

The source of the dictionary's words can be manipulated between runs. In the root of the project you will see 2 directories. The 'dictionary_sources' directory is the what is read into the program to be the source of the words that are searched. The 'scowl_dictionary' contains many more source files for english words. You can copy files from here into 'dictionary_sources' between runs.